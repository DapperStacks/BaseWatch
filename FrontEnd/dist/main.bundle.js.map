{"version":3,"sources":["C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/$_lazy_route_resource lazy","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/app.component.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/app.module.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/auth.service.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/home.component.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/login.component.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/messages.component.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/nav.component.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/new-message.component.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/register.component.html","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/register.component.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/user.component.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/web.service.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/environments/environment.ts","C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Component } from '@angular/core';\nimport { NavComponent } from './nav.component';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <nav></nav>\n  <router-outlet></router-outlet>\n  `,\n})\n\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { \n  MatButtonModule, \n  MatCardModule,\n  MatInputModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n} from '@angular/material';\nimport { AppComponent } from './app.component';\nimport { MessagesComponent } from './messages.component';\nimport { WebService } from './web.service';\nimport { HttpModule } from '@angular/http';\nimport { NewMessageComponent} from './new-message.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NavComponent } from './nav.component';\nimport { HomeComponent } from './home.component';\nimport { RegisterComponent } from './register.component';\nimport { AuthService } from './auth.service';\nimport { LoginComponent } from './login.component';\nimport { UserComponent } from './user.component';\n\nvar routes = [\n  {\n    path:'',\n    component : HomeComponent\n  },\n  {\n    path:'messages/:name',\n    component : MessagesComponent\n  },\n  {\n    path:'register',\n    component : RegisterComponent\n  },\n  {\n    path:'login',\n    component : LoginComponent\n  },\n  {\n    path:'user',\n    component : UserComponent\n  },\n\n  {\n    path:'messages',\n    component : MessagesComponent\n  },\n\n];\n\n\n//Decorator.\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessagesComponent,\n    NewMessageComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    LoginComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule, \n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule, \n    HttpModule,\n    MatButtonModule, \n    MatCardModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    RouterModule.forRoot(routes) \n  ],\n  providers: [WebService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\n@Injectable()\r\n\r\nexport class AuthService\r\n{\r\n    BASE_URL= 'http://localhost:54202/auth';\r\n    NAME_KEY = 'name';\r\n    TOKEN_KEY = 'token';\r\n\r\n    constructor(private http: Http, private router: Router){}\r\n\r\n    get name(){\r\n        return localStorage.getItem(this.NAME_KEY);\r\n    }\r\n\r\n    get isAuthenticated(){\r\n        return !!localStorage.getItem(this.TOKEN_KEY);\r\n    }\r\n\r\n    get tokenHeader()\r\n    {\r\n        var header = new Headers({'Authorization' : 'Bearer ' + localStorage.getItem(this.TOKEN_KEY)});\r\n        return new RequestOptions({headers: header});\r\n    }\r\n\r\n    login(loginData){\r\n        this.http.post(this.BASE_URL + '/login', loginData).subscribe(res =>{\r\n            this.authenticate(res);\r\n        });\r\n    }\r\n\r\n    register(user)\r\n    {\r\n        delete user.confirmPassword;\r\n        this.http.post(this.BASE_URL + '/register', user).subscribe(res=>{\r\n            this.authenticate(res);\r\n        });\r\n    }\r\n    logout(){\r\n        localStorage.removeItem(this.NAME_KEY);\r\n        localStorage.removeItem(this.TOKEN_KEY);\r\n    }\r\n\r\n    authenticate(res){\r\n        var authResponse = res.json();\r\n        if(!authResponse.token){\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem(this.TOKEN_KEY, authResponse.token);\r\n        localStorage.setItem(this.NAME_KEY, authResponse.firstName);\r\n        this.router.navigate(['/']);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/auth.service.ts","import { Component } from '@angular/core';\r\nimport { MessagesComponent } from './messages.component';\r\nimport { NewMessageComponent } from './new-message.component';\r\nimport { NavComponent } from './nav.component';\r\n\r\n\r\n@Component({\r\n  selector: 'home',\r\n  template: `\r\n    <div class=\"row column u-align-center\">\r\n    <mat-card class=\"welcome\">\r\n      <div class=\"b-title\">\r\n        <h1 class=\".mat-display-4\">\r\n          Welcome to BaseWatch\r\n        </h1>\r\n        <h2 class=\".mat-display-3\">\r\n          Your home for strategy, hero comparisons, and competitive tactics!\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <h3 class=\".mat-display-2\">\r\n          Season 7 is here! Many things have changed since the last patch over the last few months! \r\n        </h3>\r\n        <h4 class=\".mat-display-2\">\r\n          We're seeing major changes since the last Blizzard update, heroes have been nerfed and boosted, please see the chart for specifics.\r\n          As the Competitive season draws closer to the end, players around the world have dedicated time to gameplay to develop effective strategies depending on each team!\r\n        </h4>\r\n        <h5 class=\".mat-display-2\">\r\n          Please give us your feedback for grandmaster level tactics!\r\n        </h5>\r\n      </div>\r\n    </mat-card>\r\n    <mat-card>\r\n      <img mat-card-image src=\"https://www.hdwallpapers.in/walls/overwatch_4k-HD.jpg\" alt=\"image caption\">\r\n    </mat-card>\r\n  </div>\r\n  <mat-card>\r\n    <img mat-card-image class=\"image\" src=\"https://static1.squarespace.com/static/56b3cac001dbae7de45090ec/t/5740ea47e707eb88946cb876/1463938013394/\" alt=\"Overwatch Stats\">\r\n  </mat-card>\r\n  <new-message></new-message>\r\n  <messages></messages>\r\n  \r\n  `,\r\n})\r\n\r\nexport class HomeComponent {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/home.component.ts","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'login',\r\n    template: ` \r\n        <mat-card class=\"card content\">\r\n            <mat-input-container>\r\n                <input matInput [(ngModel)]=\"loginData.email\" placeholder=\"Email\" type=\"email\">\r\n            </mat-input-container>\r\n            <mat-input-container>\r\n                <input matInput [(ngModel)]=\"loginData.password\" placeholder=\"Password\" type=\"password\">\r\n            </mat-input-container>\r\n            <button mat-raised-button color=\"warn\" (click)=\"login()\">Login</button>\r\n        </mat-card>\r\n    `\r\n})\r\n\r\n//Export it.\r\nexport class LoginComponent{\r\n    constructor(private auth: AuthService){}\r\n\r\n\r\n    loginData = {\r\n        email:'',\r\n        password:''\r\n    }\r\n\r\n    login(){\r\n        this.auth.login(this.loginData);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/login.component.ts","//Displays all the messages inside the message board. \r\nimport { Component } from '@angular/core';\r\nimport { WebService } from './web.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n//Provide it as an angular component - Component Decorator, defined a template, starting message text.\r\n@Component({\r\n    selector: 'messages',\r\n    template: `\r\n    <mat-card class=\"card hero\">\r\n        <mat-card-title> Hero Board </mat-card-title>\r\n        <mat-card class=\" card content\"> \r\n            <div *ngFor=\"let message of webService.messages | async\">\r\n                <img mat-card-avatar src=\"https://pbs.twimg.com/media/B2IupThIEAANjji.png\" alt=\"Avatar image here\">\r\n                <mat-card-title [routerLink]=\"['/messages', message.owner]\" style=\"cursor:pointer\">{{message.owner}}</mat-card-title>\r\n                <mat-card-content>{{message.text}}</mat-card-content>\r\n            </div>\r\n        </mat-card>\r\n    </mat-card>\r\n    `\r\n})\r\n\r\n//Export it.\r\nexport class MessagesComponent{\r\n    constructor(private webService : WebService, private route: ActivatedRoute) {}\r\n\r\n    \r\n\r\n    ngOnInit(){\r\n        var name = this.route.snapshot.params['name'];\r\n        this.webService.getMessages(name);\r\n        this.webService.getUser().subscribe();\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/messages.component.ts","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'nav',\r\n    template: ` \r\n        <mat-toolbar color=\"warn\">\r\n            <button mat-button routerLink=\"/\"> \r\n                <img class=\"baseWatchLogo\" src=\"http://blizzpro.com/wp-content/uploads/sites/10/2017/11/OWL2-380x162.png\" alt=\"BaseWatchLogo\">\r\n            </button>\r\n            <button mat-button routerLink=\"/messages\"> Saved Strategies </button>\r\n            <span style=\"flex: 1 1 auto\"></span>\r\n            <button *ngIf=\"!auth.isAuthenticated\" mat-button routerLink=\"/login\"> Login </button>\r\n            <button *ngIf=\"!auth.isAuthenticated\" mat-button routerLink=\"/register\"> Register </button>\r\n            <button *ngIf=\"auth.isAuthenticated\" mat-button routerLink=\"/user\"> Welcome {{auth.name}} </button>\r\n            <button *ngIf=\"auth.isAuthenticated\" mat-button (click)=\"auth.logout()\"> Logout </button>\r\n        </mat-toolbar>\r\n    `\r\n})\r\n\r\n//Export it.\r\nexport class NavComponent{\r\n    constructor(private auth: AuthService){}\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/nav.component.ts","import { Component } from '@angular/core'\r\nimport { WebService } from './web.service'\r\nimport { AuthService } from './auth.service'\r\n//Provide it as an angular component - Component Decorator, defined a template, starting message text.\r\n@Component({\r\n    selector: 'new-message',\r\n    template: `\r\n    <mat-card class=\"content newMessage\">\r\n        <mat-card-title> You must be a member to post a Message! </mat-card-title>\r\n        <img mat-card-avatar src=\"https://img1.etsystatic.com/187/0/13105519/il_570xN.1258695533_9o6p.jpg\" alt=\"Avatar image here\">\r\n        <mat-card-content>\r\n            <mat-input-container>\r\n                <textarea class=\"title\" [(ngModel)]=\"message.text\" matInput placeholder=\"Insert your Message\"></textarea>\r\n             </mat-input-container>\r\n             <mat-card-actions>\r\n                <button (click)=\"post()\" mat-button color=\"warn\">Send</button>\r\n             </mat-card-actions>\r\n        </mat-card-content>\r\n    </mat-card>\r\n    `\r\n})\r\n\r\n//Export it.\r\nexport class NewMessageComponent{\r\n    \r\n    constructor(private webService : WebService, private auth : AuthService){}\r\n    message = {\r\n        owner : this.auth.name,\r\n        text : \"\"\r\n    }\r\n\r\n    owner=\"DapperStacks\";\r\n    \r\n    post(){\r\n        this.webService.postMessage(this.message);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/new-message.component.ts","module.exports = \"<mat-card class=\\\"card content\\\">\\r\\n    <form [formGroup] = \\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error':isValid('firstName')}\\\" matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\">\\r\\n        </mat-input-container>\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error':isValid('lastName')}\\\" matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\">\\r\\n        </mat-input-container>\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" type=\\\"email\\\" [ngClass]=\\\"{'error':isValid('email')}\\\"matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n        </mat-input-container>\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" type=\\\"password\\\" [ngClass]=\\\"{'error':isValid('password')}\\\"matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\r\\n        </mat-input-container>\\r\\n        <mat-input-container>\\r\\n            <input style=\\\"width:350px\\\" type=\\\"password\\\" [ngClass]=\\\"{'error':isValid('confirmPassword')}\\\" matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\">\\r\\n        </mat-input-container>\\r\\n        <span *ngIf=\\\"form.errors?.mismatchedFields\\\"> Passwords don't match! </span>\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"warn\\\">Register</button>\\r\\n    </form>\\r\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/register.component.html\n// module id = ../../../../../src/app/register.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'register',\r\n  templateUrl: 'register.component.html',\r\n  styles:[`\r\n    .error{\r\n        background-color: #fff0f0\r\n    }\r\n  \r\n  \r\n  \r\n  `\r\n  ]\r\n})\r\n\r\nexport class RegisterComponent {\r\n    form;\r\n\r\n    constructor(private fb: FormBuilder, private auth : AuthService){\r\n        this.form = fb.group({\r\n            firstName: ['', Validators.required],\r\n            lastName:['', Validators.required],\r\n            email:['', [Validators.required, emailValid()]],\r\n            password:['', Validators.required],\r\n            confirmPassword:['', Validators.required]\r\n        }, { validator: matchingFields('password', 'confirmPassword')})\r\n    }\r\n\r\n    onSubmit(){\r\n        console.log(this.form.error);\r\n        this.auth.register(this.form.value);\r\n    }\r\n\r\n    isValid(control){\r\n        return this.form.controls[control].invalid && this.form.controls[control].touched\r\n    }\r\n}\r\n\r\nfunction matchingFields(field1, field2){\r\n    return form => {\r\n        if(form.controls[field1].value !== form.controls[field2].value)\r\n            return { mismatchedFields : true }\r\n    }\r\n}\r\n\r\nfunction emailValid(){\r\n    return control => {\r\n        var regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        return regex.test(control.value) ? null : { invalidEmail: true } \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/register.component.ts","import { Component } from '@angular/core';\r\nimport { WebService } from './web.service';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'user',\r\n    template: ` \r\n        <mat-card class=\"card\">\r\n            <mat-input-container>\r\n                <input matInput [(ngModel)] = \"model.firstName\" placeholder=\"First Name\">\r\n            </mat-input-container>\r\n            <mat-input-container>\r\n                <input matInput [(ngModel)] = \"model.lastName\" placeholder=\"Last Name\">\r\n            </mat-input-container>\r\n            <button mat-raised-button color=\"accent\" (click)=\"saveUser(model)\">Save Changes</button>\r\n        </mat-card>\r\n    `\r\n})\r\n\r\n//Export it.\r\nexport class UserComponent{\r\n    \r\n    model = {\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n    }\r\n\r\n    constructor(private webService : WebService){}\r\n\r\n    ngOnInit()\r\n    {\r\n        this.webService.getUser().subscribe( res => {\r\n            this.model.firstName = res.firstName;\r\n            this.model.lastName = res.lastName;\r\n        })\r\n    }\r\n    saveUser(userData)\r\n    {\r\n        this.webService.saveUser(userData).subscribe();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/user.component.ts","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map'\r\nimport { Subject } from 'rxjs/Rx.js';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { AuthService} from './auth.service';\r\n\r\n@Injectable()\r\nexport class WebService{\r\n    BASE_URL= 'http://localhost:54202/api';\r\n\r\n    private messageStore = [];\r\n\r\n    private messageSubjet = new Subject();\r\n\r\n    messages = this.messageSubjet.asObservable();\r\n    \r\n    constructor(private http:Http, private sb: MatSnackBar, private auth: AuthService){\r\n        this.getMessages('');\r\n    }\r\n    \r\n    \r\n\r\n    getMessages(user){\r\n        user = (user) ? '/' + user : '';\r\n        this.http.get(this.BASE_URL + '/messages' + user).subscribe(response =>{\r\n            this.messageStore = response.json();\r\n            this.messageSubjet.next(this.messageStore);\r\n        }, error=>{\r\n            this.handleError(\"Unable to get messages\");\r\n        });     \r\n    }\r\n\r\n    async postMessage(message){\r\n        try {\r\n            var response = await this.http.post(this.BASE_URL + '/messages', message).toPromise();\r\n            this.messageStore.push(response.json());\r\n            this.messageSubjet.next(this.messageStore);\r\n        } catch (error) {\r\n            this.handleError(\"Unable to post message\");\r\n        }\r\n        \r\n    }\r\n\r\n    getUser()\r\n    {\r\n        return this.http.get(this.BASE_URL + '/users/me', this.auth.tokenHeader).map(res => res.json());\r\n    }\r\n\r\n    saveUser(userData)\r\n    {\r\n        return this.http.post(this.BASE_URL + '/users/me', userData, this.auth.tokenHeader).map(res => res.json());\r\n    }\r\n\r\n    private handleError(error){\r\n        console.log(error);\r\n        this.sb.open(error,'close',{duration: 2000});\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/app/web.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/environments/environment.ts","import { enableProdMode, ApplicationRef, NgZone, ValueProvider } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/James Tam/source/repos/BaseWatch/FrontEnd/src/main.ts"],"sourceRoot":"webpack:///"}